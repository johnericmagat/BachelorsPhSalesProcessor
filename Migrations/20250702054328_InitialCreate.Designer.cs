// <auto-generated />
using System;
using BachelorsPhSalesProcessor.Infrastructure.Sales;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BachelorsPhSalesProcessor.Migrations
{
    [DbContext(typeof(SalesDbContext))]
    [Migration("20250702054328_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BachelorsPhSalesProcessor.DbSet.Collection.CollectionAgentDbSet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("BalanceAmount")
                        .HasColumnType("decimal(18, 5)")
                        .HasColumnName("BalanceAmount");

                    b.Property<int>("CollectionId")
                        .HasColumnType("int")
                        .HasColumnName("CollectionId");

                    b.Property<decimal>("CommissionAmount")
                        .HasColumnType("decimal(18, 5)")
                        .HasColumnName("CommissionAmount");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CreateDate");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar")
                        .HasColumnName("CreateUser");

                    b.Property<bool>("DeleteFlag")
                        .HasColumnType("bit")
                        .HasColumnName("DeleteFlag");

                    b.Property<decimal>("PaidAmount")
                        .HasColumnType("decimal(18, 5)")
                        .HasColumnName("PaidAmount");

                    b.Property<decimal>("Percentage")
                        .HasColumnType("decimal(18, 5)")
                        .HasColumnName("Percentage");

                    b.Property<bool>("Primary")
                        .HasColumnType("bit")
                        .HasColumnName("Primary");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Remarks");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("UpdateDate");

                    b.Property<string>("UpdateUser")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar")
                        .HasColumnName("UpdateUser");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserId");

                    b.HasKey("Id");

                    b.HasIndex("CollectionId");

                    b.ToTable("CollectionAgent", (string)null);
                });

            modelBuilder.Entity("BachelorsPhSalesProcessor.DbSet.Collection.CollectionClientDbSet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CollectionId")
                        .HasColumnType("int")
                        .HasColumnName("CollectionId");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CreateDate");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar")
                        .HasColumnName("CreateUser");

                    b.Property<bool>("DeleteFlag")
                        .HasColumnType("bit")
                        .HasColumnName("DeleteFlag");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar")
                        .HasColumnName("FirstName");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar")
                        .HasColumnName("LastName");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar")
                        .HasColumnName("MiddleName");

                    b.Property<bool>("Primary")
                        .HasColumnType("bit")
                        .HasColumnName("Primary");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Remarks");

                    b.Property<string>("Suffix")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Suffix");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("UpdateDate");

                    b.Property<string>("UpdateUser")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar")
                        .HasColumnName("UpdateUser");

                    b.HasKey("Id");

                    b.HasIndex("CollectionId");

                    b.ToTable("CollectionClient", (string)null);
                });

            modelBuilder.Entity("BachelorsPhSalesProcessor.DbSet.Collection.CollectionImageDbSet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CollectionId")
                        .HasColumnType("int")
                        .HasColumnName("CollectionId");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CreateDate");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar")
                        .HasColumnName("CreateUser");

                    b.Property<bool>("DeleteFlag")
                        .HasColumnType("bit")
                        .HasColumnName("DeleteFlag");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FileName");

                    b.Property<bool>("Primary")
                        .HasColumnType("bit")
                        .HasColumnName("Primary");

                    b.Property<int>("SequenceNumber")
                        .HasColumnType("int")
                        .HasColumnName("SequenceNumber");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Title");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("UpdateDate");

                    b.Property<string>("UpdateUser")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar")
                        .HasColumnName("UpdateUser");

                    b.HasKey("Id");

                    b.HasIndex("CollectionId");

                    b.ToTable("CollectionImage", (string)null);
                });

            modelBuilder.Entity("BachelorsPhSalesProcessor.DbSet.CollectionDbSet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Agent")
                        .HasColumnType("int")
                        .HasColumnName("Agent");

                    b.Property<decimal>("BalanceAmount")
                        .HasColumnType("decimal(18, 5)")
                        .HasColumnName("BalanceAmount");

                    b.Property<decimal>("ChangeAmount")
                        .HasColumnType("decimal(18, 5)")
                        .HasColumnName("ChangeAmount");

                    b.Property<string>("Client")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Client");

                    b.Property<DateTime>("CollectionDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CollectionDate");

                    b.Property<string>("CollectionNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar")
                        .HasColumnName("CollectionNumber");

                    b.Property<decimal>("CommissionAmount")
                        .HasColumnType("decimal(18, 5)")
                        .HasColumnName("CommissionAmount");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CreateDate");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar")
                        .HasColumnName("CreateUser");

                    b.Property<bool>("DeleteFlag")
                        .HasColumnType("bit")
                        .HasColumnName("DeleteFlag");

                    b.Property<decimal>("PaidAmount")
                        .HasColumnType("decimal(18, 5)")
                        .HasColumnName("PaidAmount");

                    b.Property<string>("ReferenceNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar")
                        .HasColumnName("ReferenceNumber");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Remarks");

                    b.Property<int>("SalesId")
                        .HasColumnType("int")
                        .HasColumnName("SalesId");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Status");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("UpdateDate");

                    b.Property<string>("UpdateUser")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar")
                        .HasColumnName("UpdateUser");

                    b.HasKey("Id");

                    b.HasIndex("SalesId");

                    b.ToTable("Collection", (string)null);
                });

            modelBuilder.Entity("BachelorsPhSalesProcessor.DbSet.SalesAgentDbSet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("BalanceAmount")
                        .HasColumnType("decimal(18, 5)")
                        .HasColumnName("BalanceAmount");

                    b.Property<decimal>("CommissionAmount")
                        .HasColumnType("decimal(18, 5)")
                        .HasColumnName("CommissionAmount");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CreateDate");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar")
                        .HasColumnName("CreateUser");

                    b.Property<bool>("DeleteFlag")
                        .HasColumnType("bit")
                        .HasColumnName("DeleteFlag");

                    b.Property<decimal>("PaidAmount")
                        .HasColumnType("decimal(18, 5)")
                        .HasColumnName("PaidAmount");

                    b.Property<decimal>("Percentage")
                        .HasColumnType("decimal(18, 5)")
                        .HasColumnName("Percentage");

                    b.Property<bool>("Primary")
                        .HasColumnType("bit")
                        .HasColumnName("Primary");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Remarks");

                    b.Property<int>("SalesId")
                        .HasColumnType("int")
                        .HasColumnName("SalesId");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("UpdateDate");

                    b.Property<string>("UpdateUser")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar")
                        .HasColumnName("UpdateUser");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserId");

                    b.HasKey("Id");

                    b.HasIndex("SalesId");

                    b.ToTable("SalesAgent", (string)null);
                });

            modelBuilder.Entity("BachelorsPhSalesProcessor.DbSet.SalesClientDbSet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CreateDate");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar")
                        .HasColumnName("CreateUser");

                    b.Property<bool>("DeleteFlag")
                        .HasColumnType("bit")
                        .HasColumnName("DeleteFlag");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar")
                        .HasColumnName("FirstName");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar")
                        .HasColumnName("LastName");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar")
                        .HasColumnName("MiddleName");

                    b.Property<bool>("Primary")
                        .HasColumnType("bit")
                        .HasColumnName("Primary");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Remarks");

                    b.Property<int>("SalesId")
                        .HasColumnType("int")
                        .HasColumnName("SalesId");

                    b.Property<string>("Suffix")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Suffix");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("UpdateDate");

                    b.Property<string>("UpdateUser")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar")
                        .HasColumnName("UpdateUser");

                    b.HasKey("Id");

                    b.HasIndex("SalesId");

                    b.ToTable("SalesClient", (string)null);
                });

            modelBuilder.Entity("BachelorsPhSalesProcessor.DbSet.SalesDbSet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Agent")
                        .HasColumnType("int")
                        .HasColumnName("Agent");

                    b.Property<int?>("ApprovedBy")
                        .HasColumnType("int")
                        .HasColumnName("ApprovedBy");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("ApprovedDate");

                    b.Property<int>("BachelorsOffice")
                        .HasColumnType("int")
                        .HasColumnName("BachelorsOffice");

                    b.Property<decimal>("BalanceAmount")
                        .HasColumnType("decimal(18, 5)")
                        .HasColumnName("BalanceAmount");

                    b.Property<int?>("CancelledBy")
                        .HasColumnType("int")
                        .HasColumnName("CancelledBy");

                    b.Property<DateTime?>("CancelledDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CancelledDate");

                    b.Property<string>("Client")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Client");

                    b.Property<decimal>("CommissionAmount")
                        .HasColumnType("decimal(18, 5)")
                        .HasColumnName("CommissionAmount");

                    b.Property<decimal>("CommissionPercentage")
                        .HasColumnType("decimal(18, 5)")
                        .HasColumnName("CommissionPercentage");

                    b.Property<decimal>("CommissionTotalContractPrice")
                        .HasColumnType("decimal(18, 5)")
                        .HasColumnName("CommissionTotalContractPrice");

                    b.Property<int?>("CompletedBy")
                        .HasColumnType("int")
                        .HasColumnName("CompletedBy");

                    b.Property<DateTime?>("CompletedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CompletedDate");

                    b.Property<int?>("ConfirmedBy")
                        .HasColumnType("int")
                        .HasColumnName("ConfirmedBy");

                    b.Property<DateTime?>("ConfirmedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("ConfirmedDate");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CreateDate");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar")
                        .HasColumnName("CreateUser");

                    b.Property<bool>("DeleteFlag")
                        .HasColumnType("bit")
                        .HasColumnName("DeleteFlag");

                    b.Property<string>("Developer")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Developer");

                    b.Property<int>("DeveloperId")
                        .HasColumnType("int")
                        .HasColumnName("DeveloperId");

                    b.Property<decimal>("PaidAmount")
                        .HasColumnType("decimal(18, 5)")
                        .HasColumnName("PaidAmount");

                    b.Property<string>("Project")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Project");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int")
                        .HasColumnName("ProjectId");

                    b.Property<string>("Property")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Property");

                    b.Property<int>("PropertyId")
                        .HasColumnType("int")
                        .HasColumnName("PropertyId");

                    b.Property<string>("ReferenceNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar")
                        .HasColumnName("ReferenceNumber");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Remarks");

                    b.Property<DateTime>("ReserveDate")
                        .HasColumnType("datetime")
                        .HasColumnName("ReserveDate");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Status");

                    b.Property<decimal>("TotalContractPrice")
                        .HasColumnType("decimal(18, 5)")
                        .HasColumnName("TotalContractPrice");

                    b.Property<string>("UnitDetailBlockNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar")
                        .HasColumnName("UnitDetailBlockNumber");

                    b.Property<string>("UnitDetailLotNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar")
                        .HasColumnName("UnitDetailLotNumber");

                    b.Property<string>("UnitDetailPhaseNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar")
                        .HasColumnName("UnitDetailPhaseNumber");

                    b.Property<string>("UnitDetailUnitNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar")
                        .HasColumnName("UnitDetailUnitNumber");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("UpdateDate");

                    b.Property<string>("UpdateUser")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar")
                        .HasColumnName("UpdateUser");

                    b.Property<DateTime>("UploadDate")
                        .HasColumnType("datetime")
                        .HasColumnName("UploadDate");

                    b.HasKey("Id");

                    b.ToTable("Sales", (string)null);
                });

            modelBuilder.Entity("BachelorsPhSalesProcessor.DbSet.SalesImageDbSet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CreateDate");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar")
                        .HasColumnName("CreateUser");

                    b.Property<bool>("DeleteFlag")
                        .HasColumnType("bit")
                        .HasColumnName("DeleteFlag");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FileName");

                    b.Property<bool>("Primary")
                        .HasColumnType("bit")
                        .HasColumnName("Primary");

                    b.Property<int>("SalesId")
                        .HasColumnType("int")
                        .HasColumnName("SalesId");

                    b.Property<int>("SequenceNumber")
                        .HasColumnType("int")
                        .HasColumnName("SequenceNumber");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Title");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("UpdateDate");

                    b.Property<string>("UpdateUser")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar")
                        .HasColumnName("UpdateUser");

                    b.HasKey("Id");

                    b.HasIndex("SalesId");

                    b.ToTable("SalesImage", (string)null);
                });

            modelBuilder.Entity("BachelorsPhSalesProcessor.DbSet.SalesIncentiveDbSet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CreateDate");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar")
                        .HasColumnName("CreateUser");

                    b.Property<bool>("DeleteFlag")
                        .HasColumnType("bit")
                        .HasColumnName("DeleteFlag");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<int>("SalesId")
                        .HasColumnType("int")
                        .HasColumnName("SalesId");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("UpdateDate");

                    b.Property<string>("UpdateUser")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar")
                        .HasColumnName("UpdateUser");

                    b.HasKey("Id");

                    b.HasIndex("SalesId");

                    b.ToTable("SalesIncentive", (string)null);
                });

            modelBuilder.Entity("BachelorsPhSalesProcessor.DbSet.SalesNoteDbSet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CreateDate");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar")
                        .HasColumnName("CreateUser");

                    b.Property<bool>("DeleteFlag")
                        .HasColumnType("bit")
                        .HasColumnName("DeleteFlag");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<int>("SalesId")
                        .HasColumnType("int")
                        .HasColumnName("SalesId");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("UpdateDate");

                    b.Property<string>("UpdateUser")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar")
                        .HasColumnName("UpdateUser");

                    b.HasKey("Id");

                    b.HasIndex("SalesId");

                    b.ToTable("SalesNote", (string)null);
                });

            modelBuilder.Entity("BachelorsPhSalesProcessor.DbSet.Collection.CollectionAgentDbSet", b =>
                {
                    b.HasOne("BachelorsPhSalesProcessor.DbSet.CollectionDbSet", "Collection_Id")
                        .WithMany("CollectionAgent_CollectionId")
                        .HasForeignKey("CollectionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Collection_Id");
                });

            modelBuilder.Entity("BachelorsPhSalesProcessor.DbSet.Collection.CollectionClientDbSet", b =>
                {
                    b.HasOne("BachelorsPhSalesProcessor.DbSet.CollectionDbSet", "Collection_Id")
                        .WithMany("CollectionClient_CollectionId")
                        .HasForeignKey("CollectionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Collection_Id");
                });

            modelBuilder.Entity("BachelorsPhSalesProcessor.DbSet.Collection.CollectionImageDbSet", b =>
                {
                    b.HasOne("BachelorsPhSalesProcessor.DbSet.CollectionDbSet", "Collection_Id")
                        .WithMany("CollectionImage_CollectionId")
                        .HasForeignKey("CollectionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Collection_Id");
                });

            modelBuilder.Entity("BachelorsPhSalesProcessor.DbSet.CollectionDbSet", b =>
                {
                    b.HasOne("BachelorsPhSalesProcessor.DbSet.SalesDbSet", "Sales_Id")
                        .WithMany("Collection_SalesId")
                        .HasForeignKey("SalesId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Sales_Id");
                });

            modelBuilder.Entity("BachelorsPhSalesProcessor.DbSet.SalesAgentDbSet", b =>
                {
                    b.HasOne("BachelorsPhSalesProcessor.DbSet.SalesDbSet", "Sales_Id")
                        .WithMany("SalesAgent_SalesId")
                        .HasForeignKey("SalesId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Sales_Id");
                });

            modelBuilder.Entity("BachelorsPhSalesProcessor.DbSet.SalesClientDbSet", b =>
                {
                    b.HasOne("BachelorsPhSalesProcessor.DbSet.SalesDbSet", "Sales_Id")
                        .WithMany("SalesClient_SalesId")
                        .HasForeignKey("SalesId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Sales_Id");
                });

            modelBuilder.Entity("BachelorsPhSalesProcessor.DbSet.SalesImageDbSet", b =>
                {
                    b.HasOne("BachelorsPhSalesProcessor.DbSet.SalesDbSet", "Sales_Id")
                        .WithMany("SalesImage_SalesId")
                        .HasForeignKey("SalesId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Sales_Id");
                });

            modelBuilder.Entity("BachelorsPhSalesProcessor.DbSet.SalesIncentiveDbSet", b =>
                {
                    b.HasOne("BachelorsPhSalesProcessor.DbSet.SalesDbSet", "Sales_Id")
                        .WithMany("SalesIncentive_SalesId")
                        .HasForeignKey("SalesId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Sales_Id");
                });

            modelBuilder.Entity("BachelorsPhSalesProcessor.DbSet.SalesNoteDbSet", b =>
                {
                    b.HasOne("BachelorsPhSalesProcessor.DbSet.SalesDbSet", "Sales_Id")
                        .WithMany("SalesNote_SalesId")
                        .HasForeignKey("SalesId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Sales_Id");
                });

            modelBuilder.Entity("BachelorsPhSalesProcessor.DbSet.CollectionDbSet", b =>
                {
                    b.Navigation("CollectionAgent_CollectionId");

                    b.Navigation("CollectionClient_CollectionId");

                    b.Navigation("CollectionImage_CollectionId");
                });

            modelBuilder.Entity("BachelorsPhSalesProcessor.DbSet.SalesDbSet", b =>
                {
                    b.Navigation("Collection_SalesId");

                    b.Navigation("SalesAgent_SalesId");

                    b.Navigation("SalesClient_SalesId");

                    b.Navigation("SalesImage_SalesId");

                    b.Navigation("SalesIncentive_SalesId");

                    b.Navigation("SalesNote_SalesId");
                });
#pragma warning restore 612, 618
        }
    }
}
